---
import RootLayout from "@/layouts/RootLayout.astro";
import TopNav from "@/components/ui/TopNav.tsx";
import FooterSimple from "@/components/ui/FooterSimple.tsx";
import {
  getEntryBySlug,
  getCollection,
  type CollectionEntry,
} from "astro:content";
import { formatDate } from "@/lib/formatDate";
import Reactions from "@/components/blog/Reactions.tsx";
import Comments from "@/components/blog/Comments.tsx";

type PostEntry = CollectionEntry<"posts">;

const { slug } = Astro.params as { slug: string };
if (!slug) throw new Error("Slug requerido");

const entry = (await getEntryBySlug("posts", slug)) as PostEntry | undefined;
if (!entry) {
  throw Astro.redirect("/blog/");
}

const { Content } = await entry.render();
const data = entry.data;

const title = data.title ?? entry.slug;
const date = data.date ? formatDate(data.date) : "";
const tags = (Array.isArray(data.tags) ? data.tags : []) as string[];
const cover = data.cover ?? "/assets/png/DEVI NORMAL.png";

// 4) Prev/Next (opcional)
const all = await getCollection(
  "posts",
  ({ data }) => data.published !== false
);
all.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
const idx = all.findIndex((p) => p.slug === entry.slug);
const prev = idx < all.length - 1 ? all[idx + 1] : null;
const next = idx > 0 ? all[idx - 1] : null;
---

<RootLayout title={title} description={data.excerpt ?? ""}>
  <TopNav client:load />

  <!-- Header -->
  <header
    class="section relative bg-gradient-to-b from-[var(--surface-0)] to-[var(--surface-1)]"
  >
    <div class="absolute inset-0 -z-10 bg-grid"></div>
    <div class="mx-auto max-w-3xl px-6">
      <a
        href="/blog/"
        class="text-sm text-[var(--color-text)]/70 hover:underline"
        >← Volver al blog</a
      >
      <h1
        class="mt-3 text-3xl md:text-4xl font-extrabold text-[var(--color-title)]"
      >
        {title}
      </h1>

      <div
        class="mt-3 flex flex-wrap items-center gap-3 text-sm text-[var(--color-text)]/70"
      >
        {date && <span>{date}</span>}
        {
          tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {tags.map((t: string) => (
                <span class="rounded-full bg-[var(--color-accent)]/18 px-3 py-1 text-[10px] font-medium text-[var(--color-accent)]">
                  {t}
                </span>
              ))}
            </div>
          )
        }
      </div>
    </div>
  </header>

  <!-- Cover -->
  <div class="bg-[var(--surface-1)]">
    <div class="mx-auto max-w-5xl px-6 pb-6 pt-2">
      <img
        src={cover}
        alt={title}
        class="w-full rounded-xl border border-white/10 object-cover"
        loading="eager"
        decoding="async"
      />
    </div>
  </div>

  <!-- Contenido -->
  <article class="section mx-auto max-w-3xl px-6">
    <div
      class="prose prose-invert max-w-none prose-headings:text-[var(--color-title)] prose-p:text-[var(--color-text)] prose-a:text-[var(--color-accent)] prose-strong:text-[var(--color-title)]"
    >
      <Content />
    </div>

    <div class="mt-10">
      <Reactions client:visible slug={entry.slug} />
    </div>

    <div class="mt-10">
      <Comments client:visible slug={entry.slug} />
    </div>

    {
      (prev || next) && (
        <nav class="mt-12 grid grid-cols-2 gap-4">
          <div>
            {prev && (
              <a
                href={`/blog/${prev.slug}/`}
                class="block rounded-lg border border-white/10 bg-white/5 p-4 hover:bg-white/10 transition"
              >
                <span class="text-xs text-[var(--color-text)]/60">
                  ← Anterior
                </span>
                <div class="mt-1 font-medium text-[var(--color-title)] line-clamp-2">
                  {prev.data.title}
                </div>
              </a>
            )}
          </div>
          <div class="text-right">
            {next && (
              <a
                href={`/blog/${next.slug}/`}
                class="block rounded-lg border border-white/10 bg-white/5 p-4 hover:bg-white/10 transition"
              >
                <span class="text-xs text-[var(--color-text)]/60">
                  Siguiente →
                </span>
                <div class="mt-1 font-medium text-[var(--color-title)] line-clamp-2">
                  {next.data.title}
                </div>
              </a>
            )}
          </div>
        </nav>
      )
    }
  </article>

  <FooterSimple client:load />
</RootLayout>
