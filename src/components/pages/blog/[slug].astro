---
export const prerender = false;

import { RootLayout } from "@/layouts";
import { TopNav, FooterSimple } from "@/components/ui";
import { Reactions, Comments } from "@/components/blog";
import { listPosts, getPostBySlug } from "@/services";
import { formatDate } from "@/lib";
import type { Post } from "@/types";

const { slug } = Astro.params as { slug: string };
if (!slug) return new Response("Not found", { status: 404 });

let post: Post;
try {
  post = await getPostBySlug(slug);
} catch {
  return new Response("Not found", { status: 404 });
}

const res = await listPosts({ status: "published" });
const all = (res.items ?? []).sort((a, b) =>
  (b.publishedAt ?? b.createdAt ?? "").localeCompare(a.publishedAt ?? a.createdAt ?? "")
);
const idx = all.findIndex(p => p.slug === post.slug);
const prev = idx < all.length - 1 ? all[idx + 1] : null;
const next = idx > 0 ? all[idx - 1] : null;

const title = post.title;
const date  = post.publishedAt ?? post.createdAt ?? "";
const tags  = post.tags?.map(t => t.name) ?? [];
const cover = (post.seoMeta as any)?.cover ?? "/assets/png/DEVI NORMAL.png";
---

<RootLayout title={title} description={post.summary ?? ""}>
  <TopNav client:load />

  <header class="section relative bg-gradient-to-b from-[var(--surface-0)] to-[var(--surface-1)]">
    <div class="absolute inset-0 -z-10 bg-grid"></div>
    <div class="mx-auto max-w-3xl px-6">
      <a href="/blog/" class="text-sm text-[var(--color-text)]/70 hover:underline">← Volver al blog</a>
      <h1 class="mt-3 text-3xl md:text-4xl font-extrabold text-[var(--color-title)]">{title}</h1>

      <div class="mt-3 flex flex-wrap items-center gap-3 text-sm text-[var(--color-text)]/70">
        {date && <span>{formatDate(date)}</span>}
        {tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {tags.map((t) => (
              <span class="rounded-full bg-[var(--color-accent)]/18 px-3 py-1 text-[10px] font-medium text-[var(--color-accent)]">{t}</span>
            ))}
          </div>
        )}
      </div>
    </div>
  </header>

  <div class="bg-[var(--surface-1)]">
    <div class="mx-auto max-w-5xl px-6 pb-6 pt-2">
      <img
        src={cover}
        alt={title}
        class="w-full rounded-xl border border-white/10 object-cover"
        loading="eager"
        decoding="async"
      />
    </div>
  </div>

  <article class="section mx-auto max-w-3xl px-6">
    <div class="prose prose-invert max-w-none prose-headings:text-[var(--color-title)] prose-p:text-[var(--color-text)] prose-a:text-[var(--color-accent)] prose-strong:text-[var(--color-title)]">
      <!-- Si content viene como HTML: -->
      <div set:html={post.content}></div>
    </div>

    <div class="mt-10">
      <Reactions client:visible slug={post.slug} />
    </div>

    <div class="mt-10">
      <Comments client:visible slug={post.slug} />
    </div>

    {(prev || next) && (
      <nav class="mt-12 grid grid-cols-2 gap-4">
        <div>
          {prev && (
            <a href={`/blog/${prev.slug}/`} class="block rounded-lg border border-white/10 bg-white/5 p-4 hover:bg-white/10 transition">
              <span class="text-xs text-[var(--color-text)]/60">← Anterior</span>
              <div class="mt-1 font-medium text-[var(--color-title)] line-clamp-2">{prev.title}</div>
            </a>
          )}
        </div>
        <div class="text-right">
          {next && (
            <a href={`/blog/${next.slug}/`} class="block rounded-lg border border-white/10 bg-white/5 p-4 hover:bg-white/10 transition">
              <span class="text-xs text-[var(--color-text)]/60">Siguiente →</span>
              <div class="mt-1 font-medium text-[var(--color-title)] line-clamp-2">{next.title}</div>
            </a>
          )}
        </div>
      </nav>
    )}
  </article>

  <FooterSimple client:load />
</RootLayout>
