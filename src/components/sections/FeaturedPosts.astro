---
import { getAllPosts, type AdminPost } from "@/services";
import { formatDate } from "@/lib";

const posts: AdminPost[] = await getAllPosts({ status: "published" }).catch(() => []);
posts.sort((a,b) => (b.date || "").localeCompare(a.date || ""));

const primary = posts[0];
const seconds = posts.slice(1,3);
const cover = (p?: AdminPost) => p?.cover || "/assets/png/DEVI NORMAL.png";
---

{primary && (
  <section class="bg-[var(--surface-1)]">
    <div class="mx-auto max-w-6xl px-6 py-8">
      <div class="grid gap-6 lg:grid-cols-[1.6fr_1fr]">
        <!-- Principal -->
        <a
          href={`/blog/${primary.slug}/`}
          class="group relative overflow-hidden rounded-2xl border border-white/10 bg-white/5"
        >
          <img src={cover(primary)} alt={primary.title} class="aspect-[16/9] w-full object-cover" loading="eager" />
          <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent"></div>
          <div class="absolute bottom-0 p-5">
            <div class="mb-2 flex flex-wrap gap-2">
              {(primary.tags ?? []).slice(0,3).map(t => (
                <span class="rounded-full bg-white/15 px-3 py-1 text-[11px] text-white">#{t}</span>
              ))}
            </div>
            <h3 class="text-xl md:text-2xl font-extrabold text-white leading-tight group-hover:underline">
              {primary.title}
            </h3>
            <p class="mt-1 text-xs text-white/80">{primary.date ? formatDate(primary.date) : ""}</p>
          </div>
        </a>

        <!-- Secundarios -->
        <div class="grid gap-4">
          {seconds.map(s => (
            <a
              href={`/blog/${s.slug}/`}
              class="group grid grid-cols-[120px_1fr] items-center gap-4 overflow-hidden rounded-xl border border-white/10 bg-white/5 p-3 hover:bg-white/10"
            >
              <img src={cover(s)} alt={s.title} class="h-24 w-full rounded-lg object-cover" loading="lazy" />
              <div>
                <h4 class="line-clamp-2 font-semibold text-[var(--color-title)] group-hover:underline">{s.title}</h4>
                <p class="mt-1 text-xs text-[var(--color-text)]/70">{s.date ? formatDate(s.date) : ""}</p>
                <div class="mt-2 flex flex-wrap gap-1">
                  {(s.tags ?? []).slice(0,2).map(t => (
                    <span class="rounded-md border border-white/10 bg-white/5 px-2 py-[2px] text-[10px] text-[var(--color-text)]">#{t}</span>
                  ))}
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    </div>
  </section>
)}
